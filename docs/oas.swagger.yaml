swagger: "2.0"
info:
  title: pb/v1/service.proto
  version: version not set
tags:
  - name: UserService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/users:
    get:
      operationId: UserService_ListUsers
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - UserService
    post:
      operationId: UserService_CreateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateUserRequest'
      tags:
        - UserService
  /v1/users/{id}:
    get:
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserResponse'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/rpcStatus'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - UserService
    delete:
      operationId: UserService_DeleteUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteUserResponse'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/rpcStatus'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - UserService
    patch:
      operationId: UserService_UpdateUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateUserResponse'
        "404":
          description: Returned when the resource does not exist.
          schema:
            $ref: '#/definitions/rpcStatus'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1User'
      tags:
        - UserService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1CreateUserRequest:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
    title: User Requests
  v1CreateUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1User'
    title: User Responses
  v1DeleteUserResponse:
    type: object
    properties:
      message:
        type: string
  v1GetUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1User'
  v1ListUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1User'
  v1UpdateUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/v1User'
  v1User:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      name:
        type: string
    title: User Model
