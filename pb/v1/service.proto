syntax = "proto3";

package pb.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/sikemausa/micro-service-example/pb/v1";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {delete: "/v1/users/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "404";
        value: {
          description: "Returned when the resource does not exist.";
          schema: {
            json_schema: {ref: "#/definitions/rpcStatus"}
          }
        }
      }
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {get: "/v1/users/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "404";
        value: {
          description: "Returned when the resource does not exist.";
          schema: {
            json_schema: {ref: "#/definitions/rpcStatus"}
          }
        }
      }
    };
  }

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {get: "/v1/users"};
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/users/{id}"
      body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "404";
        value: {
          description: "Returned when the resource does not exist.";
          schema: {
            json_schema: {ref: "#/definitions/rpcStatus"}
          }
        }
      }
    };
  }
}

// User Model
message User {
  string id = 1;
  string email = 2;
  string name = 3;
}

// User Requests
message CreateUserRequest {
  string email = 1;
  string name = 2;
}

message GetUserRequest {
  string id = 1;
}

message UpdateUserRequest {
  string id = 1;
  User user = 2;
}

message DeleteUserRequest {
  string id = 1;
}

message ListUsersRequest {}

// User Responses
message CreateUserResponse {
  User user = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserResponse {
  string message = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}
